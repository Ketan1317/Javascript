WebSocket
The WebSocket protocol, provides a way to exchange data between browser and server via a persistent connection. The data can be passed in both directions as “packets”, without breaking the connection and the need of additional HTTP-requests.

WebSocket is especially great for services that require continuous data exchange,
e.g. online games, real-time trading systems and so on.

A simple example
To open a websocket connection, we need to create new WebSocket using the special protocol ws in the url:

let socket = new WebSocket("ws://javascript.info");
There’s also encrypted wss:// protocol. It’s like HTTPS for websockets.

>> Once the socket is created, we should listen to events on it. There are totally 4 events:
open – connection established,
message – data received,
error – websocket error,
close – connection closed.

==> Summary <==
WebSocket is a modern way to have persistent browser-server connections.

WebSockets don’t have cross-origin limitations.
They are well-supported in browsers.
Can send/receive strings and binary data.
The API is simple.

Methods:

socket.send(data),
socket.close([code], [reason]).
Events:

open,
message,
error,
close.